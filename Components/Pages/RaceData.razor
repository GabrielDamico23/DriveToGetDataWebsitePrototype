@page "/racedata"

@inject HttpClient httpClient
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.AspNetCore.Components.Forms
@using DriveToGetDataWebsitePrototype.Services;
@using DriveToGetDataWebsitePrototype.Models;

@inject ErgastF1Service DriverService
@inject ErgastF1Service RaceRoundService

@rendermode InteractiveServer

<h3>Race Data</h3>

<div>
    <label for="drivers">Drivers:</label>
    <select id="drivers" @bind="@selectedDriver">
        <option value="">Select a driver</option>
        @if (drivers != null)
        {
            @foreach (var driver in drivers)
            {
                <option value="@driver.DriverId">@($"{driver.GivenName} {driver.FamilyName}")</option>
            }
        }
    </select>
</div>

<div>
    <label for="raceRounds">Race Rounds:</label>
    <select id="raceRounds" @bind="@selectedRaceRound">
        <option value="">Select a race round</option>
        @if (raceRounds != null)
        {
            @foreach (var raceRound in raceRounds)
            {
                <option value="@raceRound.Round">@raceRound.RaceName</option>
            }
        }
    </select>
</div>

@if (!string.IsNullOrEmpty(selectedDriver) && !string.IsNullOrEmpty(selectedRaceRound))
{
    <h4>Results:</h4>
    <p>Loading...</p>
    <button @onclick="GetResults">Get Results</button>
    @if (results != null)
    {
        <table>
            <thead>
                <tr>
                    <th>Driver</th>
                    <th>Constructor</th>
                    <th>Starting Grid Position</th>
                    <th>Finishing Position</th>
                    <th>Points</th>
                    <th>Laps completed</th>
                    <th>Finishing Status</th>
                    <th>Fastest Lap Time</th>
                    <th>Fastest Lap Average Speed</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var result in results)
                {
                    <tr>
                        <td>@result.GivenName @result.FamilyName</td>
                        <td>@result.Name</td>
                        <td>@result.Grid</td>
                        <td>@result.Position</td>
                        <td>@result.Points</td>
                        <td>@result.Laps</td>
                        <td>@result.Status</td>
                        <td>@result.FastestLapTime</td>
                        <td>@result.AverageSpeed</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    private List<ErgastDriver> drivers;
    private List<ErgastRaceRound> raceRounds;
    private string selectedDriver;
    private string selectedRaceRound;
    private List<ErgastResult> results;

    protected override async Task OnInitializedAsync()
    {
        drivers = await DriverService.GetErgastDriversAsync();
        raceRounds = await RaceRoundService.GetErgastRaceRoundsAsync();
    }

    private async Task GetResults()
    {
        results = await httpClient.GetFromJsonAsync<List<ErgastResult>>($"https://ergast.com/api/f1/2024/{selectedRaceRound}/drivers/{selectedDriver}/results.json");
    }
}
